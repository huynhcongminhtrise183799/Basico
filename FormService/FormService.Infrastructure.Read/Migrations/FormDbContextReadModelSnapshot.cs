// <auto-generated />
using System;
using FormService.Infrastructure.Read;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FormService.Infrastructure.Read.Migrations
{
    [DbContext(typeof(FormDbContextRead))]
    partial class FormDbContextReadModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FormService.Domain.Entities.CustomerForm", b =>
                {
                    b.Property<Guid>("CustomerFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CustomerFormData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FormTemplateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("CustomerFormId");

                    b.HasIndex("FormTemplateId");

                    b.ToTable("CustomerForm", (string)null);
                });

            modelBuilder.Entity("FormService.Domain.Entities.FormTemplate", b =>
                {
                    b.Property<Guid>("FormTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FormTemplateData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormTemplateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("FormTemplateId");

                    b.ToTable("FormTemplate", (string)null);
                });

            modelBuilder.Entity("FormService.Domain.Entities.CustomerForm", b =>
                {
                    b.HasOne("FormService.Domain.Entities.FormTemplate", "FormTemplate")
                        .WithMany()
                        .HasForeignKey("FormTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CustomerForm_FormTemplate");

                    b.Navigation("FormTemplate");
                });
#pragma warning restore 612, 618
        }
    }
}
